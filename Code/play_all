#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Apr 10 14:53:01 2020

@author: peces
"""


import pandas as pd
#import numpy as np
#import os
#from tqdm import tqdm
import plotly.graph_objects as go
import plotly.io as pio
import plotly.express as px

pio.renderers.default = "browser"

path = '/Users/peces/OneDrive - Georgia Institute of Technology/Winter2020/Electriciy_Markets/Project/data/results/'
#data = pd.read_csv(path + 'FinalResults.csv')

# Assume we read a dataset with the following colummns:
# [state name] []

# %% Buble plots
#df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_us_cities.csv')
df = pd.read_csv(path + 'FinalResults2.csv')
df.head()

#df['text'] = df['name'] + '<br>Population ' + (df['pop']/1e6).astype(str)+' million'
df['text'] = df['State'] + '<br>B/C ratio: ' + (df['BC_ratio']).astype(str)


#limits = [(0,2),(3,10),(11,20),(21,50),(50,3000)]
limits = [(0.8000,0.9),(0.9001,1),(1.0001,1.1),(1.1001,1.2),(1.2001,1.3),(1.3001,2)]
#colors = ["royalblue","crimson","lightseagreen","orange","lightgrey"]
colors = ['#b4651f', '#b4911f', '#a0b41f', '#5bb41f', '#1fb48c' , '#871fb4']
cities = []
scale = 0.01
#sizeref = 2. * max(df['BC_ratio']) / (desired maximum marker size ** 2)

fig = go.Figure()

for i in range(len(limits)):
    lim = limits[i]
    #df_sub = df[lim[0]:lim[1]]
    df_sub = df[(df['BC_ratio']>lim[0]) & (df['BC_ratio']<lim[1])]
    fig.add_trace(go.Scattergeo(
        locationmode = 'USA-states',
        lon = df_sub['lon'],
        lat = df_sub['lat'],
        text = df_sub['text'],
        marker = dict(
            size = (df_sub['BC_ratio'])**8/scale,#size = df_sub['pop']/scale, # 
            color = colors[i],
            line_color='rgb(40,40,40)',
            line_width=0.01,
            sizemode = 'area'
        ),
        name = '{0} - {1}'.format(lim[0],lim[1])))

fig.update_layout(
        title_text = 'Estimated B/C ratio',# <br>(Click legend to toggle traces)',#title_text = '2014 US city populations<br>(Click legend to toggle traces)', # 
        showlegend = True,
        geo = dict(
            scope = 'usa',
            landcolor = 'rgb(217, 217, 217)',
        )
    )

fig.show()


# %% Plot LMP Variability vs. BC ratio
fig = go.Figure()
for n_node in list(df['State'].values):
    df_std = df[df['State']==n_node]
    #print(LMP[n_node].shape)
    fig.add_trace(go.Scatter(
        x = df_std['std'],#x=TIME,#dt_aux['Time Stamp'],#x=[1, 2, 3, 4, 5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],
        y=df_std['BC_ratio'],
        name=n_node
    ))
fig.update_traces(mode='markers', marker_line_width=1, marker_size=20)
fig.update_layout(
        title_text = 'B/C vs. Price Volatility',# <br>(Click legend to toggle traces)',#title_text = '2014 US city populations<br>(Click legend to toggle traces)', # 
        showlegend = True,
        xaxis_title="Variability (%)",
        yaxis_title = "B/C Ratio",
    )
fig.show()

# %% LMP Plot mean vs. BC ratio
fig = go.Figure()
for n_node in list(df['State'].values):
    df_mean = df[df['State']==n_node]
    #print(LMP[n_node].shape)
    fig.add_trace(go.Scatter(
        x = df_mean['mean'],#x=TIME,#dt_aux['Time Stamp'],#x=[1, 2, 3, 4, 5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],
        y=df_mean['BC_ratio'],
        name=n_node
    ))
fig.update_layout(
        title_text = 'B/C vs. Mean prices',# <br>(Click legend to toggle traces)',#title_text = '2014 US city populations<br>(Click legend to toggle traces)', # 
        showlegend = True,
        xaxis_title="Mean price ($/MWh)",
        yaxis_title = "B/C Ratio",
    )
fig.show()



# %% Plot Irradiance vs. BC ratio
fig = px.scatter(df, x="Sun", y="BC_ratio",
           hover_name="State", size_max=10)#, log_x=False, size_max=60)
fig.update_layout(
        title_text = 'B/C vs. Irradiance',# <br>(Click legend to toggle traces)',#title_text = '2014 US city populations<br>(Click legend to toggle traces)', # 
        showlegend = True,
        xaxis_title="Irradiance (W/m^2)",
        yaxis_title = "C/C ratio",
    )
fig.show()


# %% Plot Pareto diagram accoring to BC ratio
# Basic
fig = px.bar(df.sort_values(by=['BC_ratio']), x="State", y="BC_ratio")#, color='time')
fig.update_layout(
        title_text = 'B/C estimations',# <br>(Click legend to toggle traces)',#title_text = '2014 US city populations<br>(Click legend to toggle traces)', # 
        showlegend = True,
        xaxis_title="States",
        yaxis_title = "B/C Ratio",
    )
fig.show()

# Volatility included

# Irradiance included


# %% Plot 3D plot: BC = f(irradiance,LMP)
#   o plot de bubles!
df_irr_lmp = df.copy()
df_irr_lmp['size'] = df_irr_lmp['BC_ratio']**6
fig = px.scatter(df_irr_lmp, x="Sun", y="std", size='size', color="BC_ratio",
           hover_name="State", color_continuous_scale=px.colors.sequential.Viridis, size_max=45)#, log_x=False, size_max=60)
fig.update_layout(
        title_text = 'B/C vs. Irradiance vs. Volatility',# <br>(Click legend to toggle traces)',#title_text = '2014 US city populations<br>(Click legend to toggle traces)', # 
        showlegend = True,
        xaxis_title="Irradiance (W/m^2)",
        yaxis_title = "Standard deviation (%)",
    )
fig.show()





